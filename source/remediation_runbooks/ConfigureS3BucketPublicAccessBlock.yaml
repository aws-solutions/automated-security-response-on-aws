# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
---
description:  |
  ### Document Name - AWSConfigRemediation-ConfigureS3BucketPublicAccessBlock

  ## What does this document do?
  This document is used to create or modify the PublicAccessBlock configuration for an Amazon S3 bucket.

  ## Input Parameters
  * BucketName: (Required) Name of the S3 bucket (not the ARN).
  * RestrictPublicBuckets: (Optional) Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
    * Default: "true"
  * BlockPublicAcls: (Optional) Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket.
    * Default: "true"
  * IgnorePublicAcls: (Optional) Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.
    * Default: "true"
  * BlockPublicPolicy: (Optional) Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.
    * Default: "true"
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.

  ## Output Parameters
  * ConfigureS3PublicAccessBlock.Output - JSON formatted response from the ConfigureS3PublicAccessBlock script.

  ## Note: this is a local copy of the AWS-owned document to enable support in aws-cn and aws-us-gov partitions.
schemaVersion: "0.3"
assumeRole: "{{ AutomationAssumeRole }}"
outputs:
  - ConfigureS3BucketPublicAccessBlock.Output
parameters:
  BucketName:
    type: String
    description: (Required) The bucket name (not the ARN).
    allowedPattern: (?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)
  RestrictPublicBuckets:
    type: Boolean
    description: (Optional) Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
    default: true
    allowedValues:
      - true
      - false
  BlockPublicAcls:
    type: Boolean
    description: (Optional) Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket.
    default: true
    allowedValues:
      - true
      - false
  IgnorePublicAcls:
    type: Boolean
    description: (Optional) Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.
    default: true
    allowedValues:
      - true
      - false
  BlockPublicPolicy:
    type: Boolean
    description: (Optional) Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.
    default: true
    allowedValues:
      - true
      - false
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: '^arn:(?:aws|aws-us-gov|aws-cn):iam::\d{12}:role/[\w+=,.@-]+$'
mainSteps:
  - name: ConfigureS3BucketPublicAccessBlock
    action: "aws:executeScript"
    description: |
      ## ConfigureS3PublicAccessBlock
      Configures the S3 bucket PublicAccessBlock.
      ## Outputs
      * Output: Response from the ConfigureS3PublicAccessBlock script.
    timeoutSeconds: 600
    isCritical: true
    isEnd: true
    inputs:
      Runtime: python3.11
      Handler: handle_s3_bucket
      InputPayload:
        Bucket: "{{BucketName}}"
        RestrictPublicBuckets: "{{ RestrictPublicBuckets }}"
        BlockPublicAcls: "{{ BlockPublicAcls }}"
        IgnorePublicAcls: "{{ IgnorePublicAcls }}"
        BlockPublicPolicy: "{{ BlockPublicPolicy }}"
      Script: |-
        %%SCRIPT=ConfigureS3PublicAccessBlock.py%%
    outputs:
      - Name: Output
        Selector: $.Payload
        Type: StringMap
